apply plugin: 'build-dashboard'
apply plugin: 'codenarc'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'project-report'

version = rootProject.version

repositories {
    mavenLocal()
    mavenCentral()

    // Loading so we can get the spock-snapshot
    maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://dl.bintray.com/content/charliek/maven' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile 'joda-time:joda-time:2.1'
    compile 'org.slf4j:jul-to-slf4j:1.7.2'
    compile 'org.slf4j:slf4j-api:1.7.2'
    compile 'com.google.code.findbugs:annotations:2.0.1'

    testCompile "org.spockframework:spock-core:${spockVersion}"
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile "ch.qos.logback:logback-classic:${logbackVersion}"
    testCompile 'org.slf4j:log4j-over-slf4j:1.7.2'
    testCompile 'com.h2database:h2:1.3.168'

    testRuntime 'cglib:cglib-nodep:2.2.2'
    testRuntime 'org.objenesis:objenesis:1.2'

    //NOTE: DO NOT declare any project dependencies in here
}

configurations {
    all*.exclude group: 'log4j', module: 'log4j'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'groovy') {
            details.useTarget group: details.requested.group, name: 'groovy-all', version: groovyVersion
        }
        if (details.requested.name == 'groovy-all') {
            details.useVersion groovyVersion
        }
        if (details.requested.name == 'spock-core') {
            details.useVersion spockVersion
        }
    }
}

/** Codenarc Configuration */
codenarc {
    if (project.hasProperty('codenarc.reportFormat')) {
        reportFormat = project.getProperty('codenarc.reportFormat')
    }
    configFile = rootProject.file('codenarc.groovy')
}
codenarcTest.enabled = false

/** Test Configuration */
test.dependsOn codenarcMain
test {
    if (project.hasProperty('test.testReport')) {
        testReport = Boolean.parseBoolean(project.getProperty('test.testReport'))
    }
}

/** Configure Source Jar Artifact */
task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

task install(dependsOn: publishToMavenLocal)

publishing {
    publications {
        artifact(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier 'sources'
            }
        }
    }
    if(! isSnapshot) {
        repositories {
            maven {
                name "bintray-charliek-maven-${project.group}:${project.name}"
                url "https://api.bintray.com/maven/charliek/maven/${project.group}:${project.name}"
                credentials {
                    username bintray_username
                    password bintray_api_key
                }
            }
        }
    }
}

